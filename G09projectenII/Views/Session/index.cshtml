@using System.Globalization
@using G09projectenII.Controllers
@using Microsoft.AspNetCore.Http
@model Session

@{
    Session s = Model; //Rename the model to just "s"

    ViewBag.Title = s.Title;
    CultureInfo.CurrentCulture = new CultureInfo("nl-BE");

    bool userIsOwnerOrHeadAdmin = User.IsInRole("HeadAdmin") || (User.IsInRole("Admin") && s.Member.Username.Equals(User.Identity.Name));
}

<link href="~/css/session.css" rel="stylesheet">

<div id="session-wrapper" class="row">

    @{ string bsClassSections = s.Announcements.Any() ? "col-12 col-md-6" : "";}
    <section id="session" class="@(bsClassSections)">
        <header>
            @s.Title

            <!--State-->
            <span class="badge badge-pill session-state @("state" + s.SessionState.ToInt())">@s.SessionState.ToString()</span>
            
            <!--Share-->
            <button class="share btn btn-outline-dark" data-toggle="popover" data-placement="right" data-content="URL gekopieerd!"><i class="fas fa-share-alt"></i></button>
        </header>
        <div class="content">

            @{
                string bsClassSessionPracticalInfo = s.Announcements.Any()
                ? (!string.IsNullOrEmpty(s.Speakername)
                    ? "col-12 col-sm-6"
                    : "col-12 col-sm-4 col-md-12 col-xl-4")
                : "col-12 col-sm";
            }

            <!--Practical info-->
            <div class="session-practical-info row ">
                <div class="session-date text-center @(bsClassSessionPracticalInfo)">
                    <span class="icon">
                        <i class="far fa-calendar-alt"></i>
                    </span>
                    <span>@s.StartDateTime.ToString("ddd d MMM")</span>
                </div>
                <div class="session-time text-center @(bsClassSessionPracticalInfo)">
                    <span class="icon">
                        <i class="far fa-clock"></i>
                    </span>
                    <span>@s.StartDateTime.ToString("HH:mm") - @s.EndDateTime.ToString("HH:mm")</span>
                </div>
                <div class="session-location text-center @(bsClassSessionPracticalInfo)">
                    <span class="icon">
                        <i class="fas fa-map-marker-alt"></i>
                    </span>
                    <span>@Html.Raw(s.Location)</span>
                </div>

                @if (!string.IsNullOrEmpty(s.Speakername))
                {
                    <div class="session-speaker text-center @(bsClassSessionPracticalInfo)">
                        <span class="icon">
                            <i class="fas fa-microphone-alt"></i>
                        </span>
                        <span>@Html.Raw(s.Speakername)</span>
                    </div>
                }

            </div>

            <!--Description-->
            <div class="session-description">
                @if (!string.IsNullOrEmpty(s.Description))
                {
                    <span class="description">@s.Description</span>
                }
                else
                {
                    <span class="empty-description">Geen beschrijving beschikbaar.</span>
                }

            </div>

            <!--Extra info-->
            <div class="session-extra-info">
                <div class="session-organiser">
                    <span class="icon">
                        <i class="fas fa-user"></i>
                    </span>
                    <span>@Html.Raw(s.Member.GetFullName())</span>
                </div>



                @{
                    string extraInfoText = s.SessionState switch
                    {
                        CreatedSessionState css => $"{s.Capacity} inschrijvingsplaatsen",
                        OpenSessionState oss => $"{s.NumberOfRegistrees}/{s.Capacity} inschrijvingen",
                        ClosedSessionState css => $"{s.NumberOfAttendees}/{s.NumberOfRegistrees} ingeschrevenen aanwezig",
                        _ => ""
                    };
                }

                @if (userIsOwnerOrHeadAdmin)
                {
                <div>
                    <span> <i class="fas fa-pencil-alt"></i></span>
                    <span>@extraInfoText</span>
                </div>
                }
            </div>


            @if (User.Identity.IsAuthenticated)
            {
                <!--Buttons-->
                <div class="session-buttons">
                    @if (s.SessionState is CreatedSessionState)
                    {
                        <div class="register">
                            <button type="button" class="btn btn-primary" disabled>Inschrijven nog niet mogelijk</button>
                        </div>
                    }

                    @if (s.SessionState is OpenSessionState)
                    {
                        <div class="register">
                            <form method="post" asp-action="ToggleRegistration" asp-route-sessionId="@s.Id">
                                <button type="submit" class="btn btn-primary">
                                    @(ViewBag.MemberIsRegistered ? "Uitschrijven" : "Inschrijven")
                                </button>
                            </form>
                            
                                
                            <span class="session-free-spaces">Nog @s.AvailableRegistrationSpots vrije plaatsen</span>
                        </div>
                    }

                    @if (s.SessionState is ClosedSessionState || s.SessionState is FinishedSessionState)
                    {
                        <div class="attendance">
                            <span class="session-attendances"># Aanwezig: @s.NumberOfAttendees</span>

                            @if (ViewBag.MemberHasAttended)
                            {
                                <span class="has-user-attended badge badge-attendance badge-attended">
                                    <i class="fas fa-check"></i> Aanwezig
                                </span>
                            }
                            else
                            {
                                <span class="has-user-attended badge badge-attendance badge-not-attended">
                                    <i class="fas fa-times"></i> Niet Aanwezig
                                </span>
                            }

                        </div>
                    }
                </div>

                @if (userIsOwnerOrHeadAdmin)
                {
                    <div class="float-right">
                        <button type="button" class="btn btn-outline-secondary mt-2" id="registree-modal-btn" onclick="$('#registree-modal').modal();">Ingeschreven Studenten</button>
                    </div>
                }

                <!--Modal-->
                <div class="modal" tabindex="-1" role="dialog" id="registree-modal">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title">@(s.SessionState is OpenSessionState ? "Ingeschrevenen" : "Aanwezigen")</h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                <ul class="list-group list-group-flush">
                                    @foreach (Member m in s.SessionRegistrees.Select(sr => sr.Member))
                                    {
                                        <li class="list-group-item">
                                            <div>
                                                @await Component.InvokeAsync("ProfilePic", new { width = 20, height = 20, rounded = true, member = m })
                                                @if (!s.SessionAttendees.Select(sa => sa.Member).Contains(m))
                                                {
                                                    <i class="fas fa-times-circle pl-1 absent-icon"></i>
                                                }
                                                <span class="pl-1">@m.GetFullName()</span>
                                            </div>
                                        </li>
                                    }
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            }
            else if (s.SessionState is OpenSessionState)
            {
                <div class="not-logged-in-register">
                    <a asp-controller="Account" asp-action="Index">Log in</a><span>om je in te schrijven. (nog @s.AvailableRegistrationSpots vrije plaatsen)</span>
                </div>
            }
        </div>
    </section>

    @if (s.Announcements.Any())
    {
        <section id="annoumcements" class="@(bsClassSections)">
            <header>Aankondigingen</header>
            <div>
                @foreach (var a in s.Announcements.OrderByDescending(a => a.Timestamp))
                {
                    <div class="announcement">
                        <div class="media">
                            <img src="@(a.Author.Profilepicpath)" class="profile-picture" alt="">
                            <div class="media-body">
                                <div class="body-top">
                                    <div class="organiser">
                                        <div class="name">@a.Author.GetFullName()</div>
                                        @if (a.Author == s.Member)
                                        {
                                            <div class="organiser-subtitle">organizator</div>
                                        }
                                    </div>
                                    <div class="announcement-date">@a.Timestamp.ToString("dd/MM/yy")</div>
                                </div>
                                <div class="announcement-text">@Html.Raw(a.Text)</div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </section>
    }
</div>

<script>
    $(".share").on("click",
        () => {
            let dummy = document.createElement('input'),
                text = window.location.href;

            $("body").append(dummy);
            dummy.value = text;
            dummy.select();
            document.execCommand('copy');
            document.body.removeChild(dummy);

            $(".share").popover("show");

            setTimeout(() => $(".share").popover("hide"), 1000);
        });
</script>